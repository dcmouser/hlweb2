"""
Django settings for hldjango project.

Generated by 'django-admin startproject' using Django 5.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-&mo-em33wp1j2(v4u-u-v-or90%b%vj-+q&%%ak2che4=qwq+r"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    # django-allauth
    "django.contrib.sites",
    #
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # 3rd party addons
    "huey.contrib.djhuey",  # huey task manager
    "active_link",  # for active link highlighting
    "crispy_forms",  # better forms
    "crispy_bootstrap5",  # better forms
    "debug_toolbar",  # debug toolbar on each view
    # allauth contd.
    "allauth",
    "allauth.account",
    "allauth.socialaccount",
    "allauth.socialaccount.providers.github",
    "allauth.socialaccount.providers.google",
    # our apps
    "accounts",
    "core",
    "games",
    # 
    "django_ace",
]

MIDDLEWARE = [
    "debug_toolbar.middleware.DebugToolbarMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    # allauth
    "allauth.account.middleware.AccountMiddleware",
]


# new for allauth.. needed?
AUTHENTICATION_BACKENDS = [
    "django.contrib.auth.backends.ModelBackend",
    # allauth
    "allauth.account.auth_backends.AuthenticationBackend",
]


ROOT_URLCONF = "hldjango.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                # allauth
                "django.template.context_processors.request",
            ],
        },
    },
]

WSGI_APPLICATION = "hldjango.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "HlDjangoDb.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


# see https://huey.readthedocs.io/en/latest/django.html
HUEY = {
    "huey_class": "huey.SqliteHuey",  # Huey implementation to use.
    "name": "HlHueyDb",
    "filename": "HlHueyDb.sqlite3",
    "results": True,  # Store return values of tasks.
    "store_none": False,  # If a task returns None, do not save to results.

    # ATTN: controls whether we use queued huey or run tasks immediately
    "immediate": True,

    "utc": True,  # Use UTC for all times internally.
    "connection": {},
    "consumer": {
        "workers": 1,
        "worker_type": "thread",
        "initial_delay": 0.1,  # Smallest polling interval, same as -d.
        "backoff": 1.15,  # Exponential backoff using this rate, -b.
        "max_delay": 10.0,  # Max possible polling interval, -m.
        "scheduler_interval": 1,  # Check schedule every second, -s.
        "periodic": True,  # Enable crontab feature.
        "check_worker_health": True,  # Enable worker health checks.
        "health_check_interval": 1,  # Check worker health every second.
    },
    # To run Huey in "immediate" mode with a live storage API, specify
    # immediate_use_memory=False.
    #'immediate_use_memory': False,
}















# all-auth social account addon
# there is a weird thing where this value has to be increased in certain cases or you get a DoesNotExist error
# see https://stackoverflow.com/questions/76995338/resolving-doesnotexist-exception-with-djangos-allauth-provider-login-url
# for allauth tutorial see: https://learndjango.com/tutorials/django-allauth-tutorial
SITE_ID = 1


# can be configured in the admin/ area dynamically AND/OR here (though both for same provider is problematic)
# see https://docs.allauth.org/en/latest/socialaccount/provider_configuration.html
# set in settings_secret
#SOCIALACCOUNT_PROVIDERS = {}


# allauth settings
# see https://docs.allauth.org/en/latest/account/configuration.html
ACCOUNT_CONFIRM_EMAIL_ON_GET = True
ACCOUNT_EMAIL_NOTIFICATIONS = True
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_EMAIL_VERIFICATION = "mandatory"
DEFAULT_FROM_EMAIL = "highlow@dcmembers.com"


# backend tools
# send emails to console for testing
EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"
ACCOUNT_EMAIL_VERIFICATION = "none"

# set in settings_secret
# EMAIL_HOST, etc.








# django account redirects
LOGIN_REDIRECT_URL = "coreHome"
LOGOUT_REDIRECT_URL = "coreHome"

# custom user model
AUTH_USER_MODEL = "accounts.CustomUser"

# crispy forms 3rd party addon
CRISPY_TEMPLATE_PACK = "bootstrap5"


# media
MEDIA_ROOT = BASE_DIR / "media"
MEDIA_URL = "/media/"

# for django-debug-toolbar
INTERNAL_IPS = [
    "127.0.0.1",
]




# see https://stackoverflow.com/questions/55202684/does-bootstrap-django-error-message-has-no-red-color
from django.contrib.messages import constants as messages
MESSAGE_TAGS = {
    messages.DEBUG: 'secondary',
    messages.INFO: 'info',
    messages.SUCCESS: 'success',
    messages.WARNING: 'warning',
    messages.ERROR: 'danger',
}


# for when a game is deleted, what to do with game folder
DELETE_USER_GAMEFOLDER_METHOD = "rename"



# jr custom stuff
# cachebuildversion, if changed, will invalidate game story build text cache calculations, which makes a story look like it needs rebuilding; so change this to force a rebuild when author changes game
JR_STORYBUILDVERSION = "v1"
JR_MAXUPLOADGAMEFILESIZE = 10000000
JR_DIR_SHAREDIMAGES = MEDIA_ROOT / "shared/images"


# now override with any secret settings
from .settings_secret import *
