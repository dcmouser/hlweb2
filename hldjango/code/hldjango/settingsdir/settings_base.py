"""
Django settings for hldjango project.

Generated by 'django-admin startproject' using Django 5.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from lib.jr.jrfuncs import jrprint

from pathlib import Path
import os



# version info
JR_VERSION_NUMBER = 2.1
JR_VERSION_DATE_STR = "Oct 30, 2024"



# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent.parent
CODE_DIR = Path(__file__).resolve().parent.parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# ATTN: SECRET_KEY is defined in settings_base_secret.py



# EARLY SETTINGS
from lib.jr.jrglobalenv import jrGlobalEnv
# set default value for some environment-supported options, which will be visible to settings_base
DEBUG = jrGlobalEnv.getValue("JR_DJANGO_DEBUG", False)
if (DEBUG):
    print("\n\nNOTE: Django running with debug mode enabled..")



ALLOWED_HOSTS = ["*", "nycnoir.org"]


# Application definition

INSTALLED_APPS = [
    "django_extensions",
    "django.contrib.admin",
    # django-allauth
    "django.contrib.sites",
    #
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    # 3rd party addons
    "huey.contrib.djhuey",  # huey task manager
    "active_link",  # for active link highlighting
    "crispy_forms",  # better forms
    "crispy_bootstrap5",  # better forms
    "debug_toolbar",  # debug toolbar on each view
    # allauth contd.
    "allauth",
    "allauth.account",
    "allauth.socialaccount",
    "allauth.socialaccount.providers.github",
    "allauth.socialaccount.providers.google",
    # our apps
    "accounts",
    "core",
    "games",
    "gadmin",
    # 
    "django_ace",
]





# Middleware building
# we do this so that we can avoid using whitenoise unless we need to

MIDDLEWARE = [
    "debug_toolbar.middleware.DebugToolbarMiddleware",
    "django.middleware.security.SecurityMiddleware",
]

if (jrGlobalEnv.getValue("JR_DJANGO_WHITENOISE",False)):
    # new for serving static when using waitress sever (see https://whitenoise.readthedocs.io/en/stable/django.html);
    # see also use of whitenoise.runserver_nostatic in https://whitenoise.readthedocs.io/en/stable/django.html
    MIDDLEWARE.append("whitenoise.middleware.WhiteNoiseMiddleware")
    print("NOTE: Loading whitenoise middleware to serve static files..")

MIDDLEWARE.extend([
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",

# see https://github.com/bugsink/verbose_csrf_middleware/blob/main/README.md
# for diagnosing CSRF problems
#    "verbose_csrf_middleware.CsrfViewMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",

    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    # allauth
    "allauth.account.middleware.AccountMiddleware",
])




# new for allauth.. needed?
AUTHENTICATION_BACKENDS = [
    "django.contrib.auth.backends.ModelBackend",
    # allauth
    "allauth.account.auth_backends.AuthenticationBackend",
]


ROOT_URLCONF = "hldjango.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [CODE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                # allauth
                "django.template.context_processors.request",
            ],
        },
    },
]

WSGI_APPLICATION = "hldjango.wsgi.application"



# Database
# ATTN: SEE SUB SETTINGS



# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# django rest framework
REST_FRAMEWORK = {
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.AllowAny",
        #"rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly"
    ]
}



# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "en-us"
TIME_ZONE = "UTC"
USE_I18N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_ROOT = BASE_DIR / "static"
STATIC_URL = "/static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


# ATTN: HUEY SETUP is in sub settings











# all-auth social account addon
# there is a weird thing where this value has to be increased in certain cases or you get a DoesNotExist error
# see https://stackoverflow.com/questions/76995338/resolving-doesnotexist-exception-with-djangos-allauth-provider-login-url
# for allauth tutorial see: https://learndjango.com/tutorials/django-allauth-tutorial
SITE_ID = 1


# can be configured in the admin/ area dynamically AND/OR here (though both for same provider is problematic)
# see https://docs.allauth.org/en/latest/socialaccount/provider_configuration.html
# set in settings_secret
#SOCIALACCOUNT_PROVIDERS = {}


# allauth settings
# see https://docs.allauth.org/en/latest/account/configuration.html
ACCOUNT_CONFIRM_EMAIL_ON_GET = True
ACCOUNT_EMAIL_NOTIFICATIONS = True

# other email settings set in secure or insecure derived settings
# EMAIL_HOST, etc.








# django account redirects
LOGIN_REDIRECT_URL = "coreHome"
LOGOUT_REDIRECT_URL = "coreHome"

# custom user model
AUTH_USER_MODEL = "accounts.CustomUser"

# crispy forms 3rd party addon
CRISPY_TEMPLATE_PACK = "bootstrap5"


# media
MEDIA_ROOT = BASE_DIR / "media"
MEDIA_URL = "/media/"

# for django-debug-toolbar
INTERNAL_IPS = [
    "127.0.0.1",
    "192.168.0.1",
    "0.0.0.0"
]




# see https://stackoverflow.com/questions/55202684/does-bootstrap-django-error-message-has-no-red-color
from django.contrib.messages import constants as messages
MESSAGE_TAGS = {
    messages.DEBUG: 'secondary',
    messages.INFO: 'info',
    messages.SUCCESS: 'success',
    messages.WARNING: 'warning',
    messages.ERROR: 'danger',
}


# for when a game is deleted, what to do with game folder
DELETE_USER_GAMEFOLDER_METHOD = "rename"



# jr custom stuff
# cachebuildversion, if changed, will invalidate game story build text cache calculations, which makes a story look like it needs rebuilding; so change this to force a rebuild when author changes game
JR_STORYBUILDVERSION = "v1"
JR_MAXUPLOADGAMEFILESIZE = 10000000
JR_DIR_SHARED = MEDIA_ROOT / "shared"
JR_DIR_SHAREDIMAGES = MEDIA_ROOT / "shared/images"


# for some odd reason this is confusing it
JR_DEF_FILENAME_IMAGE_MISSING="No_Image_Available.jpg"

# groups and permissions
JR_GROUPNAME_GAMEAUTHOR = "GameAuthor"
JR_GROUPNAME_SITEGADMIN = "SiteGadmin"
JR_PERMISSIONNAME_CANPUBLISHGAMES = "canPublishGames"
JR_PERMISSIONNAME_CANGADMINSITE = "canGadminSite"
