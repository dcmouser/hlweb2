# see https://realpython.com/django-nginx-gunicorn/
# see https://nginx.org/en/docs/ngx_core_module.html

# ATTN: see below for domain name nynoir.org being used in ssl config if you want to change domain name


# this lets us launch it in shell into background but get told when it exists, rather than launching into background by default
# if we do let it launch into background by default, then we cannot run it with shell as nginx & and WAIT on it in the docker container, because the wait will immediately trigger
daemon off;


# ATTENTION: ERROR LOG TO STDOUT!
#error_log /dev/stdout info;


events {}


http {
    # ATTN: THIS SEEMS NEEED TO SERVE UP PDF FILES -- otherwise the browser tries to display them and fails
    include       /etc/nginx/mime.types;


  # attempt to avoid logging certain urls (used in access_log below)
  map $request $loggable {
    "~^GET \/games\/api\/game\/moddatebyid.*" 0;
    default 1;
  }


  # if we want to force redirect everything to ssl https enable this block and remove "listen 80" from second server block
  # ATTN: THIS *BREAKS* the ability to serve nginx on the standalone docker, IFF the standalone docker is configured to use nginx, which we sometimes do for testing
#  server {
#    access_log /jrlogs/nginx/nginx_access.log combined if=$loggable;
#    listen 80;
#    server_name www.nycnoir.org nycnoir.org;
#    server_name www.nynoir.org nynoir.org;
#    return 301 https://$host$request_uri;
#  }



  server {

    # log access to stdout?
    #access_log /dev/stdout;
    # these seem to be duplicated with wsgi_gunicorn_config.* -- can we leave these blank and let wsgi_gunicorn_config. values determine?
    access_log /jrlogs/nginx/nginx_access.log combined if=$loggable;

    # error log just needs notice level and above; at info level we get lines about ssl handshakes and stuff that doesnt seem important, but could be enabled for debugging
    error_log /jrlogs/nginx/nginx_error.log notice;

    # http normal
    listen 80;

    # https support
    listen 443 ssl;

    #ssl_certificate /code/hldjango/ssl/nycnoir.org.crt;
    #ssl_certificate_key /code/hldjango/ssl/nycnoir.org.key;
    #ssl_certificate /ssl/nycnoir.org.crt;
    #ssl_certificate_key /ssl/nycnoir.org.key;
    ssl_certificate /ssl/fullchain.pem;
    ssl_certificate_key /ssl/privkey.pem;

    # not sure how important server name is
    # it may be that it wont run exposed to 0.0.0.0 (127.0.0.1) if we dont use server_name localhost ""
    # UNLESS we are running on real server with real domain name as listed below?
    #server_name localhost "";
    server_name www.nynoir.org nynoir.org;

    # allow large client uploads (for images)
    client_max_body_size 100M;


		# for letsencrypt nonsense (temporary challenge files)
    location /.well-known {
      alias /botaccess/.well-known/;
    }


    location /static {
      #autoindex on;
      alias /static/;
    }

    location /media {
      #autoindex on;
      alias /media/;
    }
 
    # Normal
    location / {
      # include proxy settings
      include /code/hldjango/nginx_configinc_proxy.conf;
    }


    # Wide-open CORS config for nginx stuff under /media/hldata
    location /media/hldata/ {
      # is this needed?
      alias /media/hldata/;

      # include cors settings
      include /code/hldjango/nginx_configinc_cors.conf;
    }

  }
}
