# see https://realpython.com/django-nginx-gunicorn/
# see https://nginx.org/en/docs/ngx_core_module.html

# ATTN: see below for domain name nycnoir.org being used in ssl config if you want to change domain name


# this lets us launch it in shell into background but get told when it exists, rather than launching into background by default
# if we do let it launch into background by default, then we cannot run it with shell as nginx & and WAIT on it in the docker container, because the wait will immediately trigger
daemon off;
error_log /dev/stdout info;


events {}


http {
    # ATTN: THIS SEEMS NEEED TO SERVE UP PDF FILES -- otherwise the browser tries to display them and fails
    include       /etc/nginx/mime.types;


  # if we want to force redirect everything to ssl https enable this block and remove "listen 80" from second server block
#  server {
#    access_log /dev/stdout;
#    listen 80;
#    server_name www.nycnoir.org nycnoir.org;
#    return 301 https://$host$request_url;
#  }



  server {

    # log access to stdout
    access_log /dev/stdout;

    # http normal
    listen 80;

    # https support
    listen 443 ssl;


    #ssl_certificate /code/hldjango/ssl/nycnoir.org.crt;
    #ssl_certificate_key /code/hldjango/ssl/nycnoir.org.key;
    #ssl_certificate /ssl/nycnoir.org.crt;
    #ssl_certificate_key /ssl/nycnoir.org.key;
    ssl_certificate /ssl/fullchain.pem;
    ssl_certificate_key /ssl/privkey.pem;

    # not sure how important server name is
    # it may be that it wont run exposed to 0.0.0.0 (127.0.0.1) if we dont use server_name localhost ""
    # UNLESS we are running on real server with real domain name as listed below?
    #server_name localhost "";
    server_name www.nycnoir.org nycnoir.org;

    # allow large client uploads (for images)
    client_max_body_size 100M;


		# for letsencrypt nonsense (temporary challenge files)
    location /.well-known {
      alias /botaccess/.well-known/;
    }


    location /static {
      #autoindex on;
      alias /static/;
    }



    location /media {
      #autoindex on;
      alias /media/;
    }
 
    location / {
      # this connects to gunicorn process which must be listening on port 8000 (see wsgi_gunicorn_nginxhtlper.py)
      proxy_pass              http://localhost:8000;
      proxy_set_header        Host $host;

      # struggling to bypass an openssl error about "alert 42"
      proxy_ssl_server_name on;

			# trying on 10/25/24 to adjust this because we seem to be getting a timeout on server waiting for proxy
			# see https://stackoverflow.com/questions/18740635/nginx-upstream-timed-out-110-connection-timed-out-while-reading-response-hea
			proxy_read_timeout 3600;
    }


  }
}
